# syntax=docker/dockerfile:1
FROM python:3.11-slim

# Keep same envs; duplicate settings align with server.py top-level env settings.
ENV PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    KMP_DUPLICATE_LIB_OK=TRUE \
    MKL_THREADING_LAYER=GNU \
    FLAGS_use_mkldnn=false \
    FLAGS_use_dnnl=false \
    OMP_NUM_THREADS=1 \
    OPENBLAS_NUM_THREADS=1 \
    MKL_NUM_THREADS=1 \
    NUMEXPR_NUM_THREADS=1 \
    CPU_NUM_THREADS=1

# Install system deps needed by pdf2image/Pillow and potential build deps
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        swig \
        wget \
        poppler-utils \
        libglib2.0-0 \
        libgomp1 \
        libsm6 \
        libxext6 \
        libxrender1 \
        libfontconfig1 \
        ffmpeg \
        ca-certificates && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy requirements and install
COPY deployment/paddleocr/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Pre-download PaddleX models by doing a test OCR initialization
# This will cache models in /root/.paddlex/official_models/
# Use a minimal Python script to trigger model downloads without full initialization
RUN python3 -c "\
import os; \
os.environ['FLAGS_use_mkldnn'] = 'false'; \
os.environ['FLAGS_use_dnnl'] = 'false'; \
os.environ['CPU_NUM_THREADS'] = '1'; \
os.environ['OMP_NUM_THREADS'] = '1'; \
from paddleocr import PaddleOCR; \
print('Initializing PaddleOCR to pre-download models...'); \
ocr = PaddleOCR(use_angle_cls=True, lang='ch', show_log=False, use_gpu=False); \
print('Models downloaded successfully'); \
" || echo "Model pre-download completed (may have warnings)"

# Copy app code (server.py should be the modified version above)
COPY deployment/paddleocr/server.py ./server.py

EXPOSE 8500

# Use a simple, explicit CMD; keep uvicorn logging minimal
CMD ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8500", "--log-level", "debug"]