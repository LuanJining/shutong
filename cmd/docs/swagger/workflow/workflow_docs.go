// Package workflow Code generated by swaggo/swag. DO NOT EDIT
package workflow

import "github.com/swaggo/swag"

const docTemplateworkflow = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/flows": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Definitions"
                ],
                "summary": "List workflow definitions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/workflow.FlowDefinition"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Definitions"
                ],
                "summary": "Register workflow definition",
                "parameters": [
                    {
                        "description": "Definition payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterFlowRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/workflow.FlowDefinition"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.WFErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/flows/{code}/instances": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Instances"
                ],
                "summary": "Start workflow instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Definition code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Instance payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.StartInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/workflow.FlowInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.WFErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.WFErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/instances/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Instances"
                ],
                "summary": "Get workflow instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Instance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/workflow.FlowInstance"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.WFErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/instances/{id}/actions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Instances"
                ],
                "summary": "Submit action on workflow instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Instance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.InstanceActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/workflow.FlowInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.WFErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.WFErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.InstanceActionRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/workflow.TaskAction"
                },
                "actor_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "handler.RegisterFlowRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workflow.FlowNode"
                    }
                }
            }
        },
        "handler.StartInstanceRequest": {
            "type": "object",
            "properties": {
                "business_id": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "space_id": {
                    "type": "string"
                }
            }
        },
        "handler.WFErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "workflow.FlowDefinition": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workflow.FlowNode"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "workflow.FlowInstance": {
            "type": "object",
            "properties": {
                "business_id": {
                    "type": "string"
                },
                "completed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "current_node_id": {
                    "type": "string"
                },
                "definition_id": {
                    "type": "string"
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workflow.InstanceAction"
                    }
                },
                "id": {
                    "type": "string"
                },
                "space_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/workflow.InstanceStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "workflow.FlowNode": {
            "type": "object",
            "properties": {
                "approver_role": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_node_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/workflow.FlowNodeType"
                }
            }
        },
        "workflow.FlowNodeType": {
            "type": "string",
            "enum": [
                "approval",
                "auto"
            ],
            "x-enum-varnames": [
                "NodeTypeApproval",
                "NodeTypeAuto"
            ]
        },
        "workflow.InstanceAction": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/workflow.TaskAction"
                },
                "actor_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instance_id": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                }
            }
        },
        "workflow.InstanceStatus": {
            "type": "string",
            "enum": [
                "pending",
                "approved",
                "rejected"
            ],
            "x-enum-varnames": [
                "StatusPending",
                "StatusApproved",
                "StatusRejected"
            ]
        },
        "workflow.TaskAction": {
            "type": "string",
            "enum": [
                "approve",
                "reject"
            ],
            "x-enum-varnames": [
                "ActionApprove",
                "ActionReject"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfoworkflow holds exported Swagger Info so clients can modify it
var SwaggerInfoworkflow = &swag.Spec{
	Version:          "0.1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Knowledge Base Workflow Service API",
	Description:      "Workflow orchestration endpoints for the knowledge base.",
	InfoInstanceName: "workflow",
	SwaggerTemplate:  docTemplateworkflow,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfoworkflow.InstanceName(), SwaggerInfoworkflow)
}
